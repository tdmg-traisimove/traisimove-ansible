---
- name: Configure OpenPath server
  hosts: openpath
  become: true
  remote_user: root

  handlers:
    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Restart e-mission-server
      ansible.builtin.service:
        name: e-mission-server
        state: restarted

  tasks:
    - name: Setup nginx
      ansible.builtin.include_role:
        name: nginx
      vars:
        # role_dir would resolve to nginx directory
        nginx_conf_file: "{{ playbook_dir }}/roles/frontend/templates/nginx_conf.j2"
        nginx_domain_name: "{{ inventory_hostname }}"

    - name: Install MongoDB
      block:
        - name: Install dependencies
          ansible.builtin.package:
            name:
              - gnupg
            state: present

        - name: Check if MongoDB GPG key already exists
          ansible.builtin.stat:
            path: /usr/share/keyrings/mongodb-server-8.0.gpg
          register: gpg_key

        - name: Download MongoDB GPG key
          ansible.builtin.get_url:
            url: https://www.mongodb.org/static/pgp/server-8.0.asc
            dest: /tmp/mongodb-server-8.0.asc
            mode: '400'
          when: not gpg_key.stat.exists

        - name: Convert and store the GPG key in keyrings
          ansible.builtin.command:
            cmd: "gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor /tmp/mongodb-server-8.0.asc"
          args:
            creates: /usr/share/keyrings/mongodb-server-8.0.gpg

        - name: Clean up the temporary file
          ansible.builtin.file:
            path: /tmp/mongodb-server-8.0.asc
            state: absent

        - name: Add MongoDB repository to sources list
          ansible.builtin.lineinfile:
            path: "/etc/apt/sources.list.d/mongodb-org-8.0.list"
            line: "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse"
            create: true
            mode: '400'
            state: present

        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: true

        - name: Install MongoDB
          ansible.builtin.package:
            name: mongodb-org
            state: present

        - name: Start MongoDB
          ansible.builtin.service:
            name: mongod
            state: started

    - name: Download the repository
      ansible.builtin.git:
        repo: 'https://github.com/e-mission/e-mission-server'
        dest: ~/e-mission-server
        version: b15fcb983c6b2f40e548f53550d417829a2f08fc


    - name: Install and setup Miniconda
      ansible.builtin.shell:
        cmd: "yes | source setup/setup_conda.sh Linux-x86_64 && source setup/setup.sh"
        chdir: ~/e-mission-server
        creates: ~/miniconda-23.5.2
      args:
        executable: /bin/bash

    - name: Copy start_e-mission-server.sh
      ansible.builtin.copy:
        src: files/start_e-mission-server.sh
        dest: /root/start_e-mission-server.sh
        mode: '700'
      notify:
        - Restart e-mission-server

    - name: Deploy e-mission-server service
      ansible.builtin.template:
        src: "files/e-mission-server.service"
        dest: "/etc/systemd/system/e-mission-server.service"
        mode: '400'
      notify:
        - Reload systemd
        - Restart e-mission-server

    - name: Setup hourly analysis
      block:
        - name: Copy start_analysis.sh
          ansible.builtin.copy:
            src: files/start_analysis.sh
            dest: /root/start_analysis.sh
            mode: '700'

        - name: Setup hourly analysis cron job
          ansible.builtin.cron:
            name: "Start hourly analysis"
            minute: "0"
            job: "/root/start_analysis.sh"

    - name: Setup hourly silent ios push
      block:
        - name: Copy start_silent_ios_push.sh
          ansible.builtin.copy:
            src: files/start_silent_ios_push.sh
            dest: /root/start_silent_ios_push.sh
            mode: '700'

        - name: Setup hourly silent ios push cron job
          ansible.builtin.cron:
            name: "Start silent ios push"
            minute: "30"
            job: "/root/start_silent_ios_push.sh"

    - name: Enable and configure UFW
      block:
        - name: Enable UFW
          community.general.ufw:
            state: enabled

        - name: Allow SSH
          community.general.ufw:
            rule: allow
            port: 22
